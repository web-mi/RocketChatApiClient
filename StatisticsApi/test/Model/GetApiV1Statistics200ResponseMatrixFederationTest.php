<?php
/**
 * GetApiV1Statistics200ResponseMatrixFederationTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  RocketChatStatisticsApi
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Statistics
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.9.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace RocketChatStatisticsApi\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * GetApiV1Statistics200ResponseMatrixFederationTest Class Doc Comment
 *
 * @category    Class
 * @description GetApiV1Statistics200ResponseMatrixFederation
 * @package     RocketChatStatisticsApi
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class GetApiV1Statistics200ResponseMatrixFederationTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "GetApiV1Statistics200ResponseMatrixFederation"
     */
    public function testGetApiV1Statistics200ResponseMatrixFederation()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enabled"
     */
    public function testPropertyEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "maximum_size_of_public_rooms_users"
     */
    public function testPropertyMaximumSizeOfPublicRoomsUsers()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "biggest_room"
     */
    public function testPropertyBiggestRoom()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "smallest_room"
     */
    public function testPropertySmallestRoom()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "amount_of_external_users"
     */
    public function testPropertyAmountOfExternalUsers()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "amount_of_federated_rooms"
     */
    public function testPropertyAmountOfFederatedRooms()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "external_connected_servers"
     */
    public function testPropertyExternalConnectedServers()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
