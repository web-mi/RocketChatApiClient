<?php
/**
 * UsersApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  RocketChatUserManagementApi
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * User Management
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.9.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace RocketChatUserManagementApi\Test\Api;

use \RocketChatUserManagementApi\Configuration;
use \RocketChatUserManagementApi\ApiException;
use \RocketChatUserManagementApi\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * UsersApiTest Class Doc Comment
 *
 * @category Class
 * @package  RocketChatUserManagementApi
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class UsersApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for getApiV1AvatarSubject
     *
     * Get Avatars.
     *
     */
    public function testGetApiV1AvatarSubject()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getApiV1UsersAutocomplete
     *
     * Autocomplete User.
     *
     */
    public function testGetApiV1UsersAutocomplete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getApiV1UsersCheckUsernameAvailability
     *
     * Check Username Availability.
     *
     */
    public function testGetApiV1UsersCheckUsernameAvailability()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getApiV1UsersGetAvatar
     *
     * Get User Avatar.
     *
     */
    public function testGetApiV1UsersGetAvatar()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getApiV1UsersGetPersonalAccessTokens
     *
     * Get Personal Access Tokens.
     *
     */
    public function testGetApiV1UsersGetPersonalAccessTokens()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getApiV1UsersGetPreferences
     *
     * Get User's Preferences.
     *
     */
    public function testGetApiV1UsersGetPreferences()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getApiV1UsersGetPresence
     *
     * Get Specific User's Presence.
     *
     */
    public function testGetApiV1UsersGetPresence()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getApiV1UsersGetStatus
     *
     * Get Status.
     *
     */
    public function testGetApiV1UsersGetStatus()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getApiV1UsersGetUsernameSuggestion
     *
     * Get Username Suggestion.
     *
     */
    public function testGetApiV1UsersGetUsernameSuggestion()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getApiV1UsersInfo
     *
     * Get User's Info.
     *
     */
    public function testGetApiV1UsersInfo()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getApiV1UsersList
     *
     * Get Users List.
     *
     */
    public function testGetApiV1UsersList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getApiV1UsersListByStatus
     *
     * List Users by Status.
     *
     */
    public function testGetApiV1UsersListByStatus()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getApiV1UsersListTeams
     *
     * List User's Teams.
     *
     */
    public function testGetApiV1UsersListTeams()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getApiV1UsersPresence
     *
     * Get Users Presence.
     *
     */
    public function testGetApiV1UsersPresence()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getApiV1UsersRequestDataDownload
     *
     * Request Data Download.
     *
     */
    public function testGetApiV1UsersRequestDataDownload()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getApiV1UsersSendWelcomeEmail
     *
     * Send Welcome Email to User.
     *
     */
    public function testGetApiV1UsersSendWelcomeEmail()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postApiV1ModerationReportUser
     *
     * Report User.
     *
     */
    public function testPostApiV1ModerationReportUser()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postApiV1Users2faDisableEmail
     *
     * Disable 2FA Email.
     *
     */
    public function testPostApiV1Users2faDisableEmail()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postApiV1Users2faEnableEmail
     *
     * Enable 2FA with Email.
     *
     */
    public function testPostApiV1Users2faEnableEmail()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postApiV1Users2faSendEmailCode
     *
     * Send 2FA Email Code.
     *
     */
    public function testPostApiV1Users2faSendEmailCode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postApiV1UsersCreate
     *
     * Create User.
     *
     */
    public function testPostApiV1UsersCreate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postApiV1UsersCreateToken
     *
     * Create Users Token.
     *
     */
    public function testPostApiV1UsersCreateToken()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postApiV1UsersDeactivateIdle
     *
     * Deactivate Idle Users.
     *
     */
    public function testPostApiV1UsersDeactivateIdle()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postApiV1UsersDelete
     *
     * Delete User.
     *
     */
    public function testPostApiV1UsersDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postApiV1UsersDeleteOwnAccount
     *
     * Delete Own Account.
     *
     */
    public function testPostApiV1UsersDeleteOwnAccount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postApiV1UsersForgotPassword
     *
     * Forgot Password.
     *
     */
    public function testPostApiV1UsersForgotPassword()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postApiV1UsersGeneratePersonalAccessToken
     *
     * Generate Personal Access Token.
     *
     */
    public function testPostApiV1UsersGeneratePersonalAccessToken()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postApiV1UsersLogout
     *
     * Logout User.
     *
     */
    public function testPostApiV1UsersLogout()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postApiV1UsersLogoutOtherClients
     *
     * Logout Other Clients.
     *
     */
    public function testPostApiV1UsersLogoutOtherClients()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postApiV1UsersRegeneratePersonalAccessToken
     *
     * Regenerate Personal Access Token.
     *
     */
    public function testPostApiV1UsersRegeneratePersonalAccessToken()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postApiV1UsersRegister
     *
     * Register User.
     *
     */
    public function testPostApiV1UsersRegister()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postApiV1UsersRemoveOtherTokens
     *
     * Remove Other Tokens.
     *
     */
    public function testPostApiV1UsersRemoveOtherTokens()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postApiV1UsersRemovePersonalAccessToken
     *
     * Remove Personal Access Token.
     *
     */
    public function testPostApiV1UsersRemovePersonalAccessToken()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postApiV1UsersResetAvatar
     *
     * Reset Avatar.
     *
     */
    public function testPostApiV1UsersResetAvatar()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postApiV1UsersResetE2EKey
     *
     * Reset Users E2E Key.
     *
     */
    public function testPostApiV1UsersResetE2EKey()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postApiV1UsersResetTOTP
     *
     * Reset Users TOTP.
     *
     */
    public function testPostApiV1UsersResetTOTP()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postApiV1UsersSetActiveStatus
     *
     * Set User's Status Active.
     *
     */
    public function testPostApiV1UsersSetActiveStatus()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postApiV1UsersSetAvatar
     *
     * Set User Avatar.
     *
     */
    public function testPostApiV1UsersSetAvatar()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postApiV1UsersSetPreferences
     *
     * Set User Preferences.
     *
     */
    public function testPostApiV1UsersSetPreferences()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postApiV1UsersSetStatus
     *
     * Set User Status.
     *
     */
    public function testPostApiV1UsersSetStatus()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postApiV1UsersUpdate
     *
     * Update User.
     *
     */
    public function testPostApiV1UsersUpdate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postApiV1UsersUpdateOwnBasicInfo
     *
     * Update Own Basic Information.
     *
     */
    public function testPostApiV1UsersUpdateOwnBasicInfo()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
